"""
This type stub file was generated by pyright.
"""

import gtirb
import uuid
from typing import Iterable, List, Optional, Set

class Function:
    """A function is a collection of code blocks, with information about
    what the function should be named and what entrace and exit blocks it has.
    """
    def __init__(self, uuid: uuid.UUID, entryBlocks: Optional[Iterable[gtirb.CodeBlock]] = ..., blocks: Optional[Iterable[gtirb.CodeBlock]] = ..., name_symbols: Optional[Iterable[gtirb.Symbol]] = ..., exitBlocks: Optional[Iterable[gtirb.CodeBlock]] = ..., canonical_name_symbol: Optional[gtirb.Symbol] = ...) -> None:
        """Construct a new function.

        :param uuid: The UUID of the function. This value must not be the UUID
        of any existing code block.
        :param entryBlocks: A set of code blocks that represent possible entry
        points into the function.
        :param blocks: A set of code blocks that represent all blocks in this
        function.
        :param name_symbols: A set of symbols that could represent the name of
        the function.
        :param exitBlocks: A set of code blocks that represent possible points
        where control could leave the function.
        :param canonical_name_symbol: The symbol that should be considered
        the canonical name for the function.
        """
        ...
    
    @classmethod
    def build_functions(cls, module: gtirb.Module) -> List[Function]:
        """Given a module, generate all the functions associated with it."""
        ...
    
    def get_name(self) -> str:
        """Get the name of this function as a str."""
        ...
    
    def get_entry_blocks(self) -> Set[gtirb.CodeBlock]:
        """Get the set of entry blocks into this function."""
        ...
    
    def get_exit_blocks(self) -> Set[gtirb.CodeBlock]:
        """Get the set of exit blocks out of this function."""
        ...
    
    def get_all_blocks(self) -> Set[gtirb.CodeBlock]:
        """Get all blocks in this function."""
        ...
    
    @property
    def uuid(self) -> uuid.UUID:
        """Gets the UUID for the function."""
        ...
    
    @property
    def canonical_name_symbol(self) -> Optional[gtirb.Symbol]:
        """
        The canonical/primary name symbol for the function. May be None if the
        function has no associated symbols or if there are multiple symbols
        but none them are known to be the canonical symbol.
        """
        ...
    
    @property
    def name_symbols(self) -> List[gtirb.Symbol]:
        ...
    
    @property
    def names(self) -> List[str]:
        ...
    
    def __repr__(self) -> str:
        ...
    


