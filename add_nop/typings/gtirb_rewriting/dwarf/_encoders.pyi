"""
This type stub file was generated by pyright.
"""

from typing import Generic, TypeVar
from typing_extensions import Literal

_T = TypeVar("_T")
class _Encoder(Generic[_T]):
    def encode(self, value: _T, byteorder: Literal["big", "little"], ptr_size: int) -> bytes:
        ...
    


class _ULEB128Encoder(_Encoder[int]):
    def encode(self, value: int, byteorder: Literal["big", "little"], ptr_size: int) -> bytes:
        ...
    


class _SLEB128Encoder(_Encoder[int]):
    def encode(self, value: int, byteorder: Literal["big", "little"], ptr_size: int) -> bytes:
        ...
    


class _UIntEncoder(_Encoder[int]):
    def __init__(self, size: int) -> None:
        ...
    
    def encode(self, value: int, byteorder: Literal["big", "little"], ptr_size: int) -> bytes:
        ...
    


class _SIntEncoder(_Encoder[int]):
    def __init__(self, size: int) -> None:
        ...
    
    def encode(self, value: int, byteorder: Literal["big", "little"], ptr_size: int) -> bytes:
        ...
    


class _IntPtrEncoder(_Encoder[int]):
    def encode(self, value: int, byteorder: Literal["big", "little"], ptr_size: int) -> bytes:
        ...
    


